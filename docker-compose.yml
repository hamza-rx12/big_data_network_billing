version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - my_net

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - my_net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8082:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - my_net

  producer:
    build:
      context: ./producer
    container_name: producer
    # healthcheck:
    #   test: [ "CMD", "curl", "-f", "http://kafka:9092" ]
    #   interval: 5s
    #   timeout: 3s
    #   retries: 3
    depends_on:
      - kafka
      - database
    environment:
      KAFKA_BROKER: kafka:9092
    networks:
      - my_net

  jobmanager:
    image: confluentinc/cp-flink:1.18.1-cp3-java17-amd64
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    ports:
      - "8081:8081"
    networks:
      - my_net

  taskmanager:
    image: confluentinc/cp-flink:1.18.1-cp3-java17-amd64
    command: taskmanager
    depends_on:
      - jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    networks:
      - my_net

  consumer:
    build:
      context: ./consumer
    container_name: consumer
    # healthcheck:
    #   test: [ "CMD", "curl", "-f", "http://kafka:9092" ]
    #   interval: 5s
    #   timeout: 3s
    #   retries: 3
    depends_on:
      - kafka
      - producer
      - jobmanager
      - taskmanager
    environment:
      KAFKA_BROKER: kafka:9092
    networks:
      - my_net

  # # postgresdb:
  # #   image: postgres:15
  # #   container_name: postgresdb
  # #   environment:
  # #     POSTGRES_USER: admin
  # #     POSTGRES_PASSWORD: admin
  # #     POSTGRES_DB: mydatabase
  # #   ports:
  # #     - "5432:5432"
  # #   networks:
  # #     - my_net

  # # database:
  # #   build:
  # #     context: ./database
  # #   container_name: database
  # #   depends_on:
  # #     - postgresdb
  # #   # environment:
  # #   #   KAFKA_BROKER: kafka:9092
  # #   networks:
  # #     - my_net

  mongo:
    image: mongo:6
    container_name: mongo
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: admin
    #   MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - "27017:27017"
    networks:
      - my_net

  database:
    build: ./database/springboot_api
    image: springboot_api
    container_name: springboot_api
    depends_on:
      - mongo
    ports:
      - "8080:8080"
    networks:
      - my_net


  # Spark Master
  spark-master:
    build:
      context: ./batch_processor
      dockerfile: spark.Dockerfile
    image: spark-master-image
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_IP=spark-master
    ports:
      - "8083:8080"  # Spark UI
      - "7077:7077"  # Spark Master port
    networks:
      - my_net
  # Spark Worker
  spark-worker:
    # image: apache/spark:3.5.6-scala2.12-java17-python3-r-ubuntu
    build:
      context: ./batch_processor
      dockerfile: spark.Dockerfile
    container_name: sparl-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=4G
      - SPARK_WORKER_CORES=4
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_IP=spark-worker
    depends_on:
      - spark-master
    networks:
      - my_net

networks:
  my_net:
    driver: bridge
